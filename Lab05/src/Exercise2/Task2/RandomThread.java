package Exercise2.Task2;

import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class RandomThread implements Runnable {
    RandomResource random;


    public RandomThread(RandomResource random){
        this.random = random;
    }

    public void run(){
        for(int i = 0; i<1; i++){
            try {

                random.randomNumber();
                System.out.println(Thread.currentThread().getName() + " is running");

                Thread.sleep(1);

            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }

    }

    public static void main(String[] args) throws InterruptedException{

        RandomResource random = new RandomResource();
        Runnable t11 = new RandomThread(random);
        Thread t1 =  new Thread(t11);
        Runnable t22 = new RandomThread(random);
        Thread t2 =  new Thread(t22);
        Runnable t33 = new RandomThread(random);
        Thread t3 =  new Thread(t33);
        Runnable t44 = new RandomThread(random);
        Thread t4 =  new Thread(t44);
        Runnable t55 = new RandomThread(random);
        Thread t5 =  new Thread(t55);


        t1.start();
        t2.start();
        t3.start();
        t4.start();
        t5.start();

        int sum = 0;
        for (int i = 0; i < random.getNumber().size(); i++){
            sum = sum + random.getNumber().get(i);
            System.out.println(random.getNumber().get(i));
        }
        System.out.println("The sum of the numbers generated by the threads is " + sum);



    }
}
